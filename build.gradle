plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.8'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" // QueryDSL
	id 'org.asciidoctor.jvm.convert' version '3.3.2' // asciidoctor
}

group = 'com.dasibom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext{
	snippetDir = file('build/generated-snippets')
}

test {
	useJUnitPlatform()
	outputs.dir snippetDir // 생성된 파일을 미리 생성한 디렉토리(build/generated-snippets)에 저장 (3)
}

asciidoctor{
	inputs.dir snippetDir
	dependsOn test
}

bootJar{
	dependsOn asciidoctor
	from("src/docs/asciidoc"){
		into 'BOOT-INF/classes/static/docs'
	}

	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// AWS S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0'
	implementation "com.querydsl:querydsl-apt:5.0.0"
	implementation "com.querydsl:querydsl-core:5.0.0"

	// StringUtils
	implementation 'org.apache.commons:commons-lang3:3.0'

	// H2
	implementation 'com.h2database:h2:1.4.199'

	// spring rest docs 을 이용하기 위한 라이브러리
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// mockmvc
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

// === QueryDSL 추가 시작===
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
// === QueryDSL 추가 끝===
